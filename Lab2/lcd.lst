


ARM Macro Assembler    Page 1 


    1 00000000         ; LCD.s
    2 00000000         ; Student names: Daniel Diamont and Karim Sabar
    3 00000000         ; Last modification date: 3/28/2017
    4 00000000         
    5 00000000         ; Runs on LM4F120/TM4C123
    6 00000000         ; Use SSI0 to send an 8-bit code to the ST7735 160x128 p
                       ixel LCD.
    7 00000000         
    8 00000000         ; As part of Lab 7, students need to implement these LCD
                       _WriteCommand and LCD_WriteData
    9 00000000         ; This driver assumes two low-level LCD functions
   10 00000000         
   11 00000000         ; Backlight (pin 10) connected to +3.3 V
   12 00000000         ; MISO (pin 9) unconnected
   13 00000000         ; SCK (pin 8) connected to PA2 (SSI0Clk)
   14 00000000         ; MOSI (pin 7) connected to PA5 (SSI0Tx)
   15 00000000         ; TFT_CS (pin 6) connected to PA3 (SSI0Fss)
   16 00000000         ; CARD_CS (pin 5) unconnected
   17 00000000         ; Data/Command (pin 4) connected to PA6 (GPIO)
   18 00000000         ; RESET (pin 3) connected to PA7 (GPIO)
   19 00000000         ; VCC (pin 2) connected to +3.3 V
   20 00000000         ; Gnd (pin 1) connected to ground
   21 00000000         
   22 00000000 40004100 
                       DC      EQU              0x40004100
   23 00000000 00000000 
                       DC_COMMAND
                               EQU              0
   24 00000000 00000040 
                       DC_DATA EQU              0x40
   25 00000000 40008008 
                       SSI0_DR_R
                               EQU              0x40008008
   26 00000000 4000800C 
                       SSI0_SR_R
                               EQU              0x4000800C
   27 00000000 00000004 
                       SSI_SR_RNE
                               EQU              0x00000004  ; SSI Receive FIFO 
                                                            Not Empty
   28 00000000 00000010 
                       SSI_SR_BSY
                               EQU              0x00000010  ; SSI Busy Bit
   29 00000000 00000002 
                       SSI_SR_TNF
                               EQU              0x00000002  ; SSI Transmit FIFO
                                                             Not Full
   30 00000000         
   31 00000000                 EXPORT           writecommand
   32 00000000                 EXPORT           writedata
   33 00000000         
   34 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   35 00000000                 THUMB
   36 00000000                 ALIGN
   37 00000000         
   38 00000000         ; The Data/Command pin must be valid when the eighth bit
                        is
   39 00000000         ; sent.  The SSI module has hardware input and output FI



ARM Macro Assembler    Page 2 


                       FOs
   40 00000000         ; that are 8 locations deep.  Based on the observation t
                       hat
   41 00000000         ; the LCD interface tends to send a few commands and the
                       n a
   42 00000000         ; lot of data, the FIFOs are not used when writing
   43 00000000         ; commands, and they are used when writing data.  This
   44 00000000         ; ensures that the Data/Command pin status matches the b
                       yte
   45 00000000         ; that is actually being transmitted.
   46 00000000         ; The write command operation waits until all data has b
                       een
   47 00000000         ; sent, configures the Data/Command pin for commands, se
                       nds
   48 00000000         ; the command, and then waits for the transmission to
   49 00000000         ; finish.
   50 00000000         ; The write data operation waits until there is room in 
                       the
   51 00000000         ; transmit FIFO, configures the Data/Command pin for dat
                       a,
   52 00000000         ; and then adds the data to the transmit FIFO.
   53 00000000         ; NOTE: These functions will crash or stall indefinitely
                        if
   54 00000000         ; the SSI0 module is not initialized and enabled.
   55 00000000         
   56 00000000         ; This is a helper function that sends an 8-bit command 
                       to the LCD.
   57 00000000         ; Input: R0  8-bit command to transmit
   58 00000000         ; Output: none
   59 00000000         ; Assumes: SSI0 and port A have already been initialized
                        and enabled
   60 00000000         writecommand
   61 00000000         ;; --UUU-- Code to write a command to the LCD
   62 00000000         ;1) Read SSI0_SR_R and check bit 4, 
   63 00000000         ;2) If bit 4 is high, loop back to step 1 (wait for BUSY
                        bit to be low)
   64 00000000         ;3) Clear D/C=PA6 to zero
   65 00000000         ;4) Write the command to SSI0_DR_R
   66 00000000         ;5) Read SSI0_SR_R and check bit 4, 
   67 00000000         ;6) If bit 4 is high, loop back to step 5 (wait for BUSY
                        bit to be low)
   68 00000000         
   69 00000000 4912    check   LDR              R1, =SSI0_SR_R
   70 00000002 680A            LDR              R2, [R1]
   71 00000004 F002 0210       AND              R2, #0x10
   72 00000008 2A00            CMP              R2, #0x00   ;check if bit 4 is 
                                                            low 
   73 0000000A D000            BEQ              L1
   74 0000000C E7F8            B                check
   75 0000000E         
   76 0000000E 4910    L1      LDR              R1, =DC     ;clear DC
   77 00000010 680B            LDR              R3, [R1]
   78 00000012 F003 03BF       AND              R3, #0xBF   ;clear bit 6
   79 00000016 600B            STR              R3, [R1]
   80 00000018         
   81 00000018 490E            LDR              R1, =SSI0_DR_R ;Write command t
                                                            o SSIO_DR_R
   82 0000001A 6008            STR              R0, [R1]
   83 0000001C         



ARM Macro Assembler    Page 3 


   84 0000001C 490B    check_1 LDR              R1, =SSI0_SR_R
   85 0000001E 680A            LDR              R2, [R1]
   86 00000020 F002 0210       AND              R2, #0x10
   87 00000024 2A00            CMP              R2, #0x00   ;check if bit 4 is 
                                                            low 
   88 00000026 D000            BEQ              finish
   89 00000028 E7F8            B                check_1
   90 0000002A         
   91 0000002A         
   92 0000002A 4770    finish  BX               LR          ;   return
   93 0000002C         
   94 0000002C         ; This is a helper function that sends an 8-bit data to 
                       the LCD.
   95 0000002C         ; Input: R0  8-bit data to transmit
   96 0000002C         ; Output: none
   97 0000002C         ; Assumes: SSI0 and port A have already been initialized
                        and enabled
   98 0000002C         writedata
   99 0000002C         ;; --UUU-- Code to write data to the LCD
  100 0000002C         ;1) Read SSI0_SR_R and check bit 1, 
  101 0000002C         ;2) If bit 1 is low loop back to step 1 (wait for TNF bi
                       t to be high)
  102 0000002C         ;3) Set D/C=PA6 to one
  103 0000002C         ;4) Write the 8-bit data to SSI0_DR_R
  104 0000002C         
  105 0000002C 4907    check_2 LDR              R1, =SSI0_SR_R
  106 0000002E 680A            LDR              R2, [R1]
  107 00000030 F002 0202       AND              R2, #0x02   ;check bit 1
  108 00000034 2A00            CMP              R2, #0x00
  109 00000036 D100            BNE              L2
  110 00000038 E7F8            B                check_2
  111 0000003A         
  112 0000003A 4905    L2      LDR              R1, =DC
  113 0000003C 680B            LDR              R3, [R1]
  114 0000003E F043 0340       ORR              R3, #0x40   ;set bit 6
  115 00000042 600B            STR              R3, [R1]
  116 00000044         
  117 00000044 4903            LDR              R1, =SSI0_DR_R ;Write 8 bit dat
                                                            a to SSIO_DR_R
  118 00000046 7008            STRB             R0, [R1]
  119 00000048         
  120 00000048 4770            BX               LR          ;   return
  121 0000004A         
  122 0000004A         
  123 0000004A         ;***************************************************
  124 0000004A         ; This is a library for the Adafruit 1.8" SPI display.
  125 0000004A         ; This library works with the Adafruit 1.8" TFT Breakout
                        w/SD card
  126 0000004A         ; ----> http://www.adafruit.com/products/358
  127 0000004A         ; as well as Adafruit raw 1.8" TFT display
  128 0000004A         ; ----> http://www.adafruit.com/products/618
  129 0000004A         ;
  130 0000004A         ; Check out the links above for our tutorials and wiring
                        diagrams
  131 0000004A         ; These displays use SPI to communicate, 4 or 5 pins are
                        required to
  132 0000004A         ; interface (RST is optional)
  133 0000004A         ; Adafruit invests time and resources providing this ope
                       n source code,



ARM Macro Assembler    Page 4 


  134 0000004A         ; please support Adafruit and open-source hardware by pu
                       rchasing
  135 0000004A         ; products from Adafruit!
  136 0000004A         ;
  137 0000004A         ; Written by Limor Fried/Ladyada for Adafruit Industries
                       .
  138 0000004A         ; MIT license, all text above must be included in any re
                       distribution
  139 0000004A         ;****************************************************
  140 0000004A         
  141 0000004A 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  142 0000004C                 END                          ; end of file
              4000800C 
              40004100 
              40008008 
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\lcd.d 
-o.\lcd.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\
Luminary --predefine="__EVAL SETA 1" --list=.\lcd.lst LCD.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 34 in file LCD.s
   Uses
      None
Comment: .text unused
L1 0000000E

Symbol: L1
   Definitions
      At line 76 in file LCD.s
   Uses
      At line 73 in file LCD.s
Comment: L1 used once
L2 0000003A

Symbol: L2
   Definitions
      At line 112 in file LCD.s
   Uses
      At line 109 in file LCD.s
Comment: L2 used once
check 00000000

Symbol: check
   Definitions
      At line 69 in file LCD.s
   Uses
      At line 74 in file LCD.s
Comment: check used once
check_1 0000001C

Symbol: check_1
   Definitions
      At line 84 in file LCD.s
   Uses
      At line 89 in file LCD.s
Comment: check_1 used once
check_2 0000002C

Symbol: check_2
   Definitions
      At line 105 in file LCD.s
   Uses
      At line 110 in file LCD.s
Comment: check_2 used once
finish 0000002A

Symbol: finish
   Definitions
      At line 92 in file LCD.s
   Uses
      At line 88 in file LCD.s
Comment: finish used once
writecommand 00000000

Symbol: writecommand



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 60 in file LCD.s
   Uses
      At line 31 in file LCD.s
Comment: writecommand used once
writedata 0000002C

Symbol: writedata
   Definitions
      At line 98 in file LCD.s
   Uses
      At line 32 in file LCD.s
Comment: writedata used once
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

DC 40004100

Symbol: DC
   Definitions
      At line 22 in file LCD.s
   Uses
      At line 76 in file LCD.s
      At line 112 in file LCD.s

DC_COMMAND 00000000

Symbol: DC_COMMAND
   Definitions
      At line 23 in file LCD.s
   Uses
      None
Comment: DC_COMMAND unused
DC_DATA 00000040

Symbol: DC_DATA
   Definitions
      At line 24 in file LCD.s
   Uses
      None
Comment: DC_DATA unused
SSI0_DR_R 40008008

Symbol: SSI0_DR_R
   Definitions
      At line 25 in file LCD.s
   Uses
      At line 81 in file LCD.s
      At line 117 in file LCD.s

SSI0_SR_R 4000800C

Symbol: SSI0_SR_R
   Definitions
      At line 26 in file LCD.s
   Uses
      At line 69 in file LCD.s
      At line 84 in file LCD.s
      At line 105 in file LCD.s

SSI_SR_BSY 00000010

Symbol: SSI_SR_BSY
   Definitions
      At line 28 in file LCD.s
   Uses
      None
Comment: SSI_SR_BSY unused
SSI_SR_RNE 00000004

Symbol: SSI_SR_RNE
   Definitions
      At line 27 in file LCD.s
   Uses
      None



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Comment: SSI_SR_RNE unused
SSI_SR_TNF 00000002

Symbol: SSI_SR_TNF
   Definitions
      At line 29 in file LCD.s
   Uses
      None
Comment: SSI_SR_TNF unused
8 symbols
350 symbols in table
